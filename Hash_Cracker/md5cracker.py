import hashlib
import argparse

parser = argparse.ArgumentParser(description="MD5 Hash Cracker")
#The arguments will include one for the hash and one for the dictionary
parser.add_argument("-md5", dest="hash", help="md5 hash cracker", required=True) #argument for the hash
#required to indicate it cannot be ignored or not written
parser.add_argument("-w", dest="wordlist", help="wordlist", required=True)#argument for the dictionary
#we parse them to ensure that they work
parsed_args = parser.parse_args()

def main(): #we're instantiating a empty variable string that will indicate if the hash was not crackable
    hash_cracked = ""
    with open(parsed_args.wordlist) as file:
        for line in file:
            line = line.strip()
            if hashlib.md5(bytes(line, encoding="utf-8")).hexdigest() == parsed_args.hash:
                hash_cracked = line
                print("\nMD5 Hash Cracked. The value is %s"%line)
    if hash_cracked == "":
        print("\n Failed to crack the hash. Use a bigger dictionary")

if __name__ == "__main__":
    main() #when you run the command in terminal, the main function is executed
